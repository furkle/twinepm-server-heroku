#! /usr/bin/env python3

import argparse
import shutil
import subprocess
import os

dirname = os.path.dirname(os.path.realpath(__file__))
compose_path = os.path.join(dirname, '../docker-compose.yml')
compose_override_path = os.path.join(dirname,
                                     '../docker-compose.override.yml')

parser = argparse.ArgumentParser(description='Install dependencies for ' +
                                 'TwinePM\'s PHP-FPM container.')

args = parser.parse_args()

cmd = ['apt-get', 'install', '-y', 'git']
proc = subprocess.Popen(cmd)
proc.communicate()

try:
    cmd = ['docker-php-ext-install', 'mbstring', 'pdo', 'dom']
    proc = subprocess.Popen(cmd)
    proc.communicate()
except:
    cmd = ['apt-get', 'install', '-y', 'php-mbstring', 'php-pdo', 'php-dom']
    proc = subprocess.Popen(cmd)
    proc.communicate()

tmp_redis_path = '/tmp/redis/'
phpiredis_path = '{}phpiredis/'.format(tmp_redis_path)

try:
    os.makedirs(phpiredis_path)
except OSError as e:
    if e.errno != errno.EEXIST:
        raise

cmd = ['git', 'clone', 'https://github.com/nrk/phpiredis']
proc = subprocess.Popen(cmd, cwd=tmp_redis_path)
proc.communicate()

cmd = ['phpize']
proc = subprocess.Popen(cmd, cwd=phpiredis_path)
proc.communicate()

cmd = ['./configure', '--enable-phpiredis']
proc = subprocess.Popen(cmd, cwd=phpiredis_path)
proc.communicate()

cmd = ['make', '-j2']
proc = subprocess.Popen(cmd, cwd=phpiredis_path)
proc.communicate()

cmd = ['make', 'install']
proc = subprocess.Popen(cmd, cwd=phpiredis_path)
proc.communicate()

with open('{}/phpiredis.ini'.format(os.environ['PHP_INI_DIR']), 'w') as f:
    f.write('extension=phpiredis.so')

cmd = ['kill', '-USR2', '1']
proc = subprocess.Popen(cmd)
proc.communicate()

cmd = ['php', '--ri', 'phpiredis']
proc = subprocess.Popen(cmd)
proc.communicate()

shutil.copyfile('/etc/twinepm-server-heroku/php-fpm/log.conf',
                '/usr/local/etc/php-fpm.d/zz-log.conf')