#! /usr/bin/env python3

import argparse
import shutil
import subprocess
import os
import urllib.request as request

dirname = os.path.dirname(os.path.realpath(__file__))
compose_path = os.path.join(dirname, '../docker-compose.yml')
compose_override_path = os.path.join(dirname,
                                     '../docker-compose.override.yml')

parser = argparse.ArgumentParser(description='Install dependencies for ' +
                                 'TwinePM\'s PHP-FPM container.')

args = parser.parse_args()


nproc = subprocess.check_output('nproc')
cmd = ['docker-php-ext-install', 'mbstring']
try:
    proc = subprocess.Popen(cmd)
    proc.communicate()
except:
    cmd = ['apt-get', 'install', '--no-install-recommends', '-y',
           'php-mbstring']
    proc = subprocess.Popen(cmd)
    proc.communicate()


cmd = ['composer', '-v']
cwd = '/etc/twinepm-server-heroku'
try:
    proc = subprocess.Popen(cmd, cwd=cwd)
    proc.communicate()
except:
    cmd = ['apt-get', 'install', '--no-install-recommends', '-y', 'git',
           'php', 'unzip', 'zip']
    proc = subprocess.Popen(cmd)
    proc.communicate()

url = 'http://getcomposer.org/installer'
file_name = '/tmp/composer-setup.php'
with request.urlopen(url) as response, open(file_name, 'wb') as out_file:
    shutil.copyfileobj(response, out_file)

cmd = ['php', '/tmp/composer-setup.php', '--install-dir=/usr/local/bin',
       '--filename=composer']
proc = subprocess.Popen(cmd)
proc.communicate()

os.remove('/tmp/composer-setup.php')

cmd = ['composer', 'install', '--no-scripts', '--no-plugins']
proc = subprocess.Popen(cmd, cwd=cwd)
proc.communicate()

with open('/usr/share/nginx/html/index.php', 'w') as f:
    f.write('<?php require_once "/etc/twinepm-server-heroku/index.php"; ?>')

app_path = '/etc/twinepm-server-heroku/'
shutil.copy2('{}src/site.conf'.format(app_path),
             '/etc/nginx/conf.d/default.conf')
shutil.copy2('{}src/mime.types'.format(app_path), '/etc/nginx/')

print('Completed installing web dependencies.')