<?xml version="1.0" encoding="UTF-8" ?>
<project name="twinepm-server-heroku" default="launch-stable-vm">
    <!-- Runs from command line. -->
    <target name="destroy-vm">
        <exec
            passthru="true"
            command="vagrant destroy">
        </exec>
    </target>

    <!-- Runs from command line. -->
    <target name="launch-stable-vm">
        <exec
            passthru="true"
            command="
            TWINEPM_BRANCH=master &amp;&amp;
            export TWINEPM_BRANCH &amp;&amp;
            vagrant up">
        </exec>
    </target>

    <!-- Runs from command line. -->
    <target name="launch-dev-vm">
        <exec
            passthru="true"
            command="
            TWINEPM_BRANCH=dev &amp;&amp;
            export TWINEPM_BRANCH &amp;&amp;
            vagrant up">
        </exec>
    </target>

    <!-- Runs from Vagrantfile. -->
    <target name="get-vm-dependencies">
        <exec
            passthru="true"
            command="
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - &amp;&amp;
            apt-key fingerprint 0EBFCD88 &amp;&amp;
            add-apt-repository
                &quot;deb [arch=amd64]
                https://download.docker.com/linux/ubuntu
                $(lsb_release -cs)
                stable&quot; &amp;&amp;
            apt-get update &amp;&amp;
            apt-get install -y docker-ce">
        </exec>
    </target>

    <!-- Runs inside webserver/logic Dockerfile. -->
    <target name="get-logic-dependencies">
        <!-- sed calls and below from https://github.com/1and1internet/ubuntu-16-nginx-php-7.1/ -->
        <exec
            passthru="true"
            command="
            apt-get update &amp;&amp;
            apt-get install -y
                software-properties-common
                gnupg
                locales &amp;&amp;
            LANG=en_US.UTF-8 &amp;&amp;
            LANGUAGE=en_US:en &amp;&amp;
            LC_ALL=en_US.UTF-8 &amp;&amp;
            localedef -i en_US -f UTF-8 en_US.UTF-8 &amp;&amp;
            /usr/sbin/update-locale LANG=$LANG &amp;&amp;
            apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C &amp;&amp;
            add-apt-repository -y ppa:ondrej/php &amp;&amp;
            apt-get update &amp;&amp;
            apt-get install -y
                composer
                php7.1
                php7.1-fpm
                php7.1-mbstring
                php7.1-xml
                php7.1-zip
                unzip
                zip &amp;&amp;
            rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/* &amp;&amp;
            sed -i -e 's/^user = www-data$/;user = www-data/g' /etc/php/7.1/fpm/pool.d/www.conf &amp;&amp;
            sed -i -e 's/^group = www-data$/;group = www-data/g' /etc/php/7.1/fpm/pool.d/www.conf &amp;&amp;
            sed -i -e 's/^listen.owner = www-data$/;listen.owner = www-data/g' /etc/php/7.1/fpm/pool.d/www.conf &amp;&amp;
            sed -i -e 's/^listen.group = www-data$/;listen.group = www-data/g' /etc/php/7.1/fpm/pool.d/www.conf &amp;&amp;
            sed -i -e 's/max_execution_time = 30/max_execution_time = 300/g' /etc/php/7.1/fpm/php.ini &amp;&amp;
            sed -i -e 's/upload_max_filesize = 2M/upload_max_filesize = 256M/g' /etc/php/7.1/fpm/php.ini &amp;&amp;
            sed -i -e 's/post_max_size = 8M/post_max_size = 512M/g' /etc/php/7.1/fpm/php.ini &amp;&amp;
            sed -i -e 's/memory_limit = 128M/memory_limit = 512M/g' /etc/php/7.1/fpm/php.ini &amp;&amp;
            sed -i -e 's/fastcgi_param  SERVER_PORT        $server_port;/fastcgi_param  SERVER_PORT        $http_x_forwarded_port;/g' /etc/nginx/fastcgi.conf &amp;&amp;
            sed -i -e 's/fastcgi_param  SERVER_PORT        $server_port;/fastcgi_param  SERVER_PORT        $http_x_forwarded_port;/g' /etc/nginx/fastcgi_params &amp;&amp;
            sed -i -e '/sendfile on;/a\        fastcgi_read_timeout 300\;' /etc/nginx/nginx.conf &amp;&amp;
            mkdir --mode 777 /var/run/php &amp;&amp;
            chmod 755 /hooks /var/www &amp;&amp;
            chmod -R 777 /var/www/html /var/log &amp;&amp;
            sed -i -e 's/index index.html/index index.php index.html/g' /etc/nginx/sites-enabled/site.conf &amp;&amp;
            chmod 666 /etc/nginx/sites-enabled/site.conf &amp;&amp;
            nginx -t &amp;&amp;
            mkdir -p /run /var/lib/nginx /var/lib/php &amp;&amp;
            chmod -R 777 /run /var/lib/nginx /var/lib/php /etc/php/7.1/fpm/php.ini">
        </exec>
    </target>

    <target name="install-php-packages">
        <exec
            passthru="true"
            command="
            cd /etc/twinepm-server-heroku &amp;&amp;
            composer install">
        </exec>
    </target>

    <!-- Runs inside get-vm-dependencies -->
    <target name="build-containers">
        <exec
            passthru="true"
            command="
            cd /etc/twinepm-server-heroku/src &amp;&amp;
            docker build --build-arg TWINEPM_BRANCH=$TWINEPM_BRANCH -t twinepm_logic . &amp;&amp;
            cd ../redis &amp;&amp;
            docker build -t twinepm_redis . &amp;&amp;
            cd ../postgresql &amp;&amp;
            docker build -t twinepm_postgresql .">
        </exec>
    </target>

    <!-- Runs inside Vagrantfile. -->
    <target name="run-containers">
        <exec
            passthru="true"
            command="
            cd /etc/twinepm-server-heroku/src &amp;&amp;
            docker run --name twinepm_logic -d  -p 443:80 twinepm_logic:latest &amp;&amp;
            cd ../redis &amp;&amp;
            docker run --name twinepm_redis -d twinepm_redis:latest redis-server --appendonly yes &amp;&amp;
            cd ../postgresql &amp;&amp;
            docker run --name twinepm_postgresql -d twinepm_postgresql:latest">
        </exec>
    </target>
</project>